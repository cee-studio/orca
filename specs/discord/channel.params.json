{
  "namespace": ["discord"],
  "comment": "https://discord.com/developers/docs/resources/channel",
  "defs":
  [
    {
      "title":"Modify Channel",
      "namespace":["modify_channel"],
      "struct":"params",
      "fields":
      [
        { "name": "name", "type":{ "base":"char", "dec":"*" }, "inject_if_not":null },
        { "name": "icon", "type":{ "base":"char", "dec":"*" }, "inject_if_not":null },
        { "name": "type", "type":{ "base":"int" }},
        { "name": "position", "type":{ "base":"int" }, "inject_if_not":0 },
        { "name": "topic", "type":{ "base":"char", "dec":"*" }, "inject_if_not":null },
        { "name": "nsfw", "type":{ "base":"bool" }, "inject_if_not":false },
        { "name": "rate_limit_per_user", "type":{ "base":"int" }, "inject_if_not":0 },
        { "name": "bitrate", "type":{ "base":"int" }, "inject_if_not":0 },
        { "name": "user_limit", "type":{ "base":"int" }, "inject_if_not":0 },
        { "name": "permission_overwrites", "type":{ "base":"struct discord_overwrite", "dec":"ntl" }, "inject_if_not":null },
        { "name": "parent_id", "type":{ "base":"char", "dec":"*", "converter":"snowflake" }, "inject_if_not":0 },
        { "name": "rtc_region", "type":{ "base":"char", "dec":"*" }, "inject_if_not":null },
        { "name": "video_quality_mode", "type":{ "base":"int" }, "inject_if_not":0 },
        { "name": "archived", "type":{ "base":"bool" }, "inject_if_not":false },
        { "name": "auto_archive_duration", "type":{ "base":"int" }, "inject_if_not":0 },
        { "name": "locked", "type":{ "base":"bool" }, "inject_if_not":false }
      ]
    },
    {
      "title":"Create Message",
      "namespace": ["create_message"],
      "struct":"params",
      "fields":
      [
        { "name": "content", "type":{ "base":"char", "dec":"*" }, "comment":"the message contents (up to 2000 characters)", "inject_if_not":null },
        { "name": "tts", "type":{ "base":"bool" }, "comment":"true if this is a TTS message", "inject_if_not":false },
        { "name": "embeds", "type":{ "base":"struct discord_embed", "dec":"ntl" }, "comment":"embedded rich content (up to 6000 characters)", "inject_if_not":null },
        { "name": "embed", "type":{ "base":"struct discord_embed", "dec":"*" }, "comment":"embedded rich content, deprecated in favor of embeds", "inject_if_not":null },
        { "name": "allowed_mentions", "type":{ "base":"struct discord_allowed_mentions", "dec":"*" }, "comment":"allowed mentions for the message", "inject_if_not":null },
        { "name": "message_reference", "type":{ "base":"struct discord_message_reference", "dec":"*" }, "comment":"include to make your message a reply", "inject_if_not":null },
        { "name": "components", "type":{ "base":"struct discord_component", "dec":"ntl" }, "comment":"the components to include with the message", "inject_if_not":null },
        { "name": "sticker_ids", "type":{ "base":"ja_u64", "dec":"ntl" }, "comment":"ids of up to 3 stickers in the server to send in the message", "inject_if_not":null },
        { "name": "attachments", "type":{ "base":"struct discord_attachment", "dec":"ntl" }, "comment":"attachment objects with filename and description", "inject_if_not":null }
      ]
    },
    {
      "title":"Get Channel Messages",
      "namespace": ["get_channel_messages"],
      "struct":"params",
      "fields":
      [
        { "name": "around", "type":{ "base":"char", "dec":"*", "converter":"snowflake" }, "loc":"query", "comment":"get messages around this message ID", "inject_if_not":0 },
        { "name": "before", "type":{ "base":"char", "dec":"*", "converter":"snowflake" }, "loc":"query", "comment":"get messages before this message ID", "inject_if_not":0 },
        { "name": "after", "type":{ "base":"char", "dec":"*", "converter":"snowflake" }, "loc":"query", "comment":"get messages after this message ID", "inject_if_not":0 },
        { "name": "limit", "type":{ "base":"int" }, "loc":"query", "default_value":50, "comment":"max number of messages to return (1-100)", "inject_if_not":0 }
      ]
    },
    {
      "title":"Get Reactions",
      "namespace": ["get_reactions"],
      "struct":"params",
      "fields":
      [
        { "name": "after", "type":{ "base":"char", "dec":"*", "converter":"snowflake" }, "loc":"query"},
        { "name": "limit", "type":{ "base":"int" }, "loc":"query"}
      ]
    },
    {
      "title":"Edit Channel Permissions",
      "namespace": ["edit_channel_permissions"],
      "struct":"params",
      "fields":
      [
        { "name": "allow", "type":{ "base":"s_as_hex_uint", "int_alias":"enum discord_bitwise_permission_flags"}, "comment":"permission bit set" },
        { "name": "deny", "type":{ "base":"s_as_hex_uint", "int_alias":"enum discord_bitwise_permission_flags"}, "comment":"permission bit set" },
        { "name": "type", "type":{ "base":"int" }}
      ]
    },
    {
      "title":"Edit Message",
      "namespace": ["edit_message"],
      "struct":"params",
      "fields":
      [
        { "name": "content", "type":{ "base":"char", "dec":"*" }, "comment":"the message contents (up to 2000 characters)", "inject_if_not":null },
        { "name": "embeds", "type":{ "base":"struct discord_embed", "dec":"ntl" }, "comment":"embedded rich content (up to 6000 characters)", "inject_if_not":null },
        { "name": "embed", "type":{ "base":"struct discord_embed", "dec":"*" }, "comment":"embedded rich content, deprecated in favor of embeds", "inject_if_not":null },
        { "name": "flags", "type":{ "base":"int", "int_alias":"enum discord_message_flags" }, "comment":"edit the flags of a message", "inject_if_not":0 },
        { "name": "allowed_mentions", "type":{ "base":"struct discord_allowed_mentions", "dec":"*" }, "comment":"allowed mentions for the message", "inject_if_not":null },
        { "name": "attachments", "type":{ "base":"struct discord_attachment", "dec":"ntl" }, "comment":"attached files to keep", "inject_if_not":null },
        { "name": "components", "type":{ "base":"struct discord_component", "dec":"ntl" }, "comment":"the components to include with the message", "inject_if_not":null }
      ]
    },
    {
      "title":"Follow News Channel",
      "namespace": ["follow_news_channel"],
      "struct":"params",
      "fields":
      [
        { "name": "webhook_channel_id", "type":{ "base":"char", "dec":"*", "converter":"snowflake"} }
      ]
    },
    {
      "title":"Create Channel Invite",
      "namespace":["create_channel_invite"],
      "struct":"params",
      "fields":
      [
        { "name": "max_age", "type":{ "base":"int" }},
        { "name": "max_uses", "type":{ "base":"int" }},
        { "name": "temporary", "type":{ "base":"bool" }},
        { "name": "unique", "type":{ "base":"bool" }},
        { "name": "target_type", "type":{ "base":"int" }, "option":true, "inject_if_not":0 },
        { "name": "target_user_id", "type":{ "base":"char", "dec":"*", "converter":"snowflake"}, "option":true, "inject_if_not":0 },
        { "name": "target_application_id", "type":{ "base":"char", "dec":"*", "converter":"snowflake"}, "option":true, "inject_if_not":0 }
      ]
    },
    {
      "title":"Group DM Add Recipient",
      "namespace": ["group_dm_add_recipient"],
      "struct":"params",
      "fields":
      [
        { "name": "access_token", "type":{ "base":"char", "dec":"*" }},
        { "name": "nick", "type":{ "base":"char", "dec":"*" }}
      ]
    },
    {
      "title":"Start Thread with Message",
      "namespace": ["start_thread_with_message"],
      "struct":"params",
      "fields":
      [
        { "name": "name", "type":{ "base":"char", "dec":"*" }, "inject_if_not":null },
        { "name": "auto_archive_duration", "type":{ "base":"int" }, "inject_if_not":0 }
      ]
    },
    {
      "title":"Start Thread without Message",
      "namespace": ["start_thread_without_message"],
      "struct":"params",
      "fields":
      [
        { "name": "name", "type":{ "base":"char", "dec":"*" } },
        { "name": "auto_archive_duration", "type":{ "base":"int" }, "inject_if_not":0 },
        { "name": "type", "type":{ "base":"int", "int_alias":"enum discord_channel_types" } }
      ]
    },
    {
      "title":"List Active Threads",
      "namespace": ["thread"],
      "struct":"response_body",
      "fields":
      [
        { "name": "threads", "type":{ "base":"struct discord_channel", "dec":"ntl" } },
        { "name": "members", "type":{ "base":"struct discord_thread_member", "dec":"ntl" } },
        { "name": "has_more", "type":{ "base":"bool" } }
      ]
    }
  ]
}
